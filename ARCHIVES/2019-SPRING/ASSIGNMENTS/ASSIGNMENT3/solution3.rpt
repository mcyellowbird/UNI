mysql> source solution3.sql
--------------
/* (1)	First, the script makes a relational table that contains a general log empty.			*/

TRUNCATE TABLE mysql.general_log
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
/* (2)  Next, the script sets the appropriate values of the variables to save a general log in 
        a relational table and to start recording a general log from now. 		                */

set global general_log='ON'
--------------

Query OK, 0 rows affected (0.02 sec)

--------------
set global log_output='TABLE'
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
/* (3) Next, the script makes a database csit115 a default database, it stops recording a report, 
       it executes a script file workload.sql, and it resumes recording a report into a file 
       solution3.rpt.  					                                                */

use csit115
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
/* (4)	Next, the script sets the appropriate values of all variables to stop recording a general log 
        from now.											*/

set global general_log='OFF'
--------------

Query OK, 0 rows affected (0.00 sec)

--------------
/* (5)	Finally, the script finds and lists how many times each one of the relational tables included 
        in a sample database have been used by the successfully processed SQL statements included in 
        SQL script workload.sql. You have to consider the relational tables with the following names 
        EMPLOYEE, DRIVER, ADMIN, TRUCK, TRIP, and TRIPLEG and no other relational tables. The script 
        must list the names of relational tables together with the total number of times each table 
        has been used. Please, find a fragment of a sample output listed below.

        +------------+-------+
        | TABLE_NAME | TOTAL |
        +------------+-------+
        | EMPLOYEE   |     5 |
        | TRIP       |     3 |
          ...             ...
        +------------+-------+
        6 rows in set (0.01 sec)

        To simplify this task, assume that a relational table is used at most one time in SQL 
        statement. 

        The results must be listed in the descending order of the total number of times each one 
        of the relational tables has been used by the successfully processed SQL statements included 
        in a script workload.sql. Note, that some of SQL statements included in a script workload.sql 
        cannot be successfully processed and because of that counting the total number of names of 
        relational tables in the script does not provide the correct results. To find the correct 
        results you must access an earlier recorded general log.      	                                */

WITH EMPLOYEE_COUNT AS
                      ( SELECT 'EMPLOYEE' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%EMPLOYEE%' ),
     DRIVER_COUNT AS
                      ( SELECT 'DRIVER' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%DRIVER%' ),
     ADMIN_COUNT AS
                      ( SELECT 'ADMIN' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%ADMIN%' ),
     TRUCK_COUNT AS
                      ( SELECT 'TRUCK' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%TRUCK%' ),
     TRIP_COUNT AS
                      ( SELECT 'TRIP' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%TRIP%' ),
     TRIPLEG_COUNT AS
                      ( SELECT 'TRIPLEG' TABLE_NAME, COUNT(*) TOTAL
                        FROM  mysql.general_log
                        WHERE argument LIKE '%TRIPLEG%' ),
     ALL_COUNT AS
                     ( SELECT * FROM EMPLOYEE_COUNT
                       UNION
                       SELECT * FROM DRIVER_COUNT
                       UNION
                       SELECT * FROM ADMIN_COUNT
                       UNION
                       SELECT * FROM TRUCK_COUNT
                       UNION
                       SELECT * FROM TRIP_COUNT
                       UNION
                       SELECT * FROM TRIPLEG_COUNT )
SELECT *
FROM ALL_COUNT
ORDER BY TOTAL DESC
--------------

+------------+-------+
| TABLE_NAME | TOTAL |
+------------+-------+
| EMPLOYEE   |    11 |
| TRIP       |     7 |
| ADMIN      |     5 |
| TRIPLEG    |     5 |
| TRUCK      |     3 |
| DRIVER     |     0 |
+------------+-------+
6 rows in set (0.01 sec)

mysql> notee
